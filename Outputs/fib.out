0001  function void main {} [
        [0001, 0001] (0001,          DefFunction) {function}
        [0001, 0010] (0003,             TypeVoid) {void}
        [0001, 0015] (0002,         ReservedMain) {main}
        [0001, 0020] (0010,            OpenBrace) {{}
        [0001, 0021] (0011,           CloseBrace) {}}
        [0001, 0023] (0012,            OpenBrack) {[}
0002      itg n;
        [0002, 0005] (0004,          TypeInteger) {itg}
        [0002, 0009] (0000,        Identificator) {n}
        [0002, 0010] (0024,      SignalSemiColon) {;}
0003      read{n};
        [0003, 0005] (0023,         ReservedRead) {read}
        [0003, 0009] (0010,            OpenBrace) {{}
        [0003, 0010] (0000,        Identificator) {n}
        [0003, 0011] (0011,           CloseBrace) {}}
        [0003, 0012] (0024,      SignalSemiColon) {;}
0004      itg a = 0;
        [0004, 0005] (0004,          TypeInteger) {itg}
        [0004, 0009] (0000,        Identificator) {a}
        [0004, 0011] (0040,      AtributionEqual) {=}
        [0004, 0013] (0051,             IntConst) {0}
        [0004, 0014] (0024,      SignalSemiColon) {;}
0005      itg b = 1;
        [0005, 0005] (0004,          TypeInteger) {itg}
        [0005, 0009] (0000,        Identificator) {b}
        [0005, 0011] (0040,      AtributionEqual) {=}
        [0005, 0013] (0051,             IntConst) {1}
        [0005, 0014] (0024,      SignalSemiColon) {;}
0006      if {n >= 1} [
        [0006, 0005] (0017,           ReservedIf) {if}
        [0006, 0008] (0010,            OpenBrace) {{}
        [0006, 0009] (0000,        Identificator) {n}
        [0006, 0011] (0045, RelationGreaterEqual) {>=}
        [0006, 0014] (0051,             IntConst) {1}
        [0006, 0015] (0011,           CloseBrace) {}}
        [0006, 0017] (0012,            OpenBrack) {[}
0007          write{a};
        [0007, 0009] (0022,        ReservedWrite) {write}
        [0007, 0014] (0010,            OpenBrace) {{}
        [0007, 0015] (0000,        Identificator) {a}
        [0007, 0016] (0011,           CloseBrace) {}}
        [0007, 0017] (0024,      SignalSemiColon) {;}
0008      ]
        [0008, 0005] (0013,           CloseBrack) {]}
0009      if {n >= 2} [
        [0009, 0005] (0017,           ReservedIf) {if}
        [0009, 0008] (0010,            OpenBrace) {{}
        [0009, 0009] (0000,        Identificator) {n}
        [0009, 0011] (0045, RelationGreaterEqual) {>=}
        [0009, 0014] (0051,             IntConst) {2}
        [0009, 0015] (0011,           CloseBrace) {}}
        [0009, 0017] (0012,            OpenBrack) {[}
0010          write{b};
        [0010, 0009] (0022,        ReservedWrite) {write}
        [0010, 0014] (0010,            OpenBrace) {{}
        [0010, 0015] (0000,        Identificator) {b}
        [0010, 0016] (0011,           CloseBrace) {}}
        [0010, 0017] (0024,      SignalSemiColon) {;}
0011      ]
        [0011, 0005] (0013,           CloseBrack) {]}
0012      while {n >= 3} [
        [0012, 0005] (0021,        ReservedWhile) {while}
        [0012, 0011] (0010,            OpenBrace) {{}
        [0012, 0012] (0000,        Identificator) {n}
        [0012, 0014] (0045, RelationGreaterEqual) {>=}
        [0012, 0017] (0051,             IntConst) {3}
        [0012, 0018] (0011,           CloseBrace) {}}
        [0012, 0020] (0012,            OpenBrack) {[}
0013          itg x = a + b;
        [0013, 0009] (0004,          TypeInteger) {itg}
        [0013, 0013] (0000,        Identificator) {x}
        [0013, 0015] (0040,      AtributionEqual) {=}
        [0013, 0017] (0000,        Identificator) {a}
        [0013, 0019] (0026,         OperationAdd) {+}
        [0013, 0021] (0000,        Identificator) {b}
        [0013, 0022] (0024,      SignalSemiColon) {;}
0014          a = b;
        [0014, 0009] (0000,        Identificator) {a}
        [0014, 0011] (0040,      AtributionEqual) {=}
        [0014, 0013] (0000,        Identificator) {b}
        [0014, 0014] (0024,      SignalSemiColon) {;}
0015          b = x;
        [0015, 0009] (0000,        Identificator) {b}
        [0015, 0011] (0040,      AtributionEqual) {=}
        [0015, 0013] (0000,        Identificator) {x}
        [0015, 0014] (0024,      SignalSemiColon) {;}
0016          write{b};
        [0016, 0009] (0022,        ReservedWrite) {write}
        [0016, 0014] (0010,            OpenBrace) {{}
        [0016, 0015] (0000,        Identificator) {b}
        [0016, 0016] (0011,           CloseBrace) {}}
        [0016, 0017] (0024,      SignalSemiColon) {;}
0017          n--;
        [0017, 0009] (0000,        Identificator) {n}
        [0017, 0010] (0031,         OperationDec) {--}
        [0017, 0012] (0024,      SignalSemiColon) {;}
0018      ]
        [0018, 0005] (0013,           CloseBrack) {]}
0019  ]
        [0019, 0001] (0013,           CloseBrack) {]}
